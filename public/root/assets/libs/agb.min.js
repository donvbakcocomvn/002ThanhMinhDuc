var ngayHienTai = new Date();

function loadFile4Path(t) {

    var e = "/" + t.Key + "/" + t.Name + ".html", r = t.Name.charAt(0).toUpperCase() + t.Name.slice(1);
    document.write('<script src="' + e.replace(".html", "Controller.js?v=" + ngayHienTai.getTime()) + '"><\/script>'),
            document.write('<script src="' + e.replace(".html", "Services.js?v=" + ngayHienTai.getTime()) + '"><\/script>'),
            document.write('<script>app.directive("bakco' + r + '", function () {return {restrict: "CAE",controller: "' + r.toLowerCase() + 'Controller",templateUrl: "' + e + '"}});<\/script>')
}
function testInterceptor() {
    return {
        request: function(config) {
            var token = JSON.parse(window.localStorage.getItem("token"));
//            console.log(token);
//            console.log(config);
            if (token) {
                config.headers['Authorization'] = "Bearer " + token.access_token;
            }
            config.headers['Content-Type'] = "application/x-www-form-urlencoded; charset=UTF-8";

            return config;

        },
        requestError: function(config) {
            return config;
        },
        response: function(res) {
            return res;
        },
        responseError: function(res) {
            return res;
        }
    }
}

var app = angular.module("rootApp", ["ngRoute"]);
app.factory('testInterceptor', testInterceptor)
        .config(function($httpProvider) {
            $httpProvider.interceptors.push('testInterceptor');
        });
app.config(['$locationProvider', function($locationProvider) {
        $locationProvider.hashPrefix('');
        $locationProvider.html5Mode({
            enabled: false,
            requireBase: false,
            rewriteLinks: false
        });
    }
]);
app.service("appService", function($http, $httpParamSerializer) {

    this._Get = function(linkApi, params) {
        if (params != null)
            return $http.get(linkApi, {params: params});
        return $http.get(linkApi);
    }
    this._Post = function(linkApi, Model) {
        return $http.post(linkApi, Model);
    }
    this._Put = function(linkApi, Model) {
        return $http.put(linkApi, JSON.stringify(Model));
    }
    this._Delete = function(linkApi, $params) {
        console.log($params);
        return $http.delete(linkApi, {params: $params});
    }
});
if (typeof (sysPath) !== 'undefined')
{
    for (x in sysPath)
        loadFile4Path(sysPath[x]);
}
app.controller("phantrangController", phantrangController);
function phantrangController($scope, $rootScope, $http, $routeParams) {
    $scope.getArray = function(curentIndex, totalPages) {
        curentIndex = parseInt(curentIndex);
        var a = new Array();
        var start = curentIndex - 3;
        start = Math.max(start, 1);
        var end = curentIndex + 3;
        end = Math.min(end, totalPages);
        for (var i = start; i < end; i++) {
            a.push(i);
        }
        console.log(end);
        console.log(start);
        console.log(curentIndex);
        console.log(a);
        return a;
    }
}
app.directive("phanTrang", function() {
    return {
        restrict: 'AEC',
        templateUrl: "/public/ang1/PhanTrang/phantrang.html",
        controller: "phantrangController",
        scope: {
            pagesIndex: '=',
            pagesNumber: '=',
            pagesTotal: '=',
            pagesParams: '=',
            ctrlFn: '&onClick',
        },
        replace: true,
        transclude: false,
        link: function(scope, element, attrs, controller) {
            scope.onClick = function(seachProduct, pagesIndex, pagesNumber) {
                console.log(scope.pagesParams);
                if (typeof (scope.ctrlFn) == 'function') {
                    scope.ctrlFn({"Params": scope.pagesParams, "pagesIndex": pagesIndex, "pagesNumber": pagesNumber});
                }
            }
        }
    };
});



